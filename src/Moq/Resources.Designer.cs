namespace GpClass.Moq {
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PSClass.Moq.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Value cannot be an empty string..
        /// </summary>
        public static string ArgumentCannotBeEmpty {
            get {
                return ResourceManager.GetString("ArgumentCannotBeEmpty", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Can only add interfaces to the mock..
        /// </summary>
        public static string AsMustBeInterface {
            get {
                return ResourceManager.GetString("AsMustBeInterface", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Expected invocation on the mock at least {2} times, but was {4} times: {1}.
        /// </summary>
        public static string NoMatchingCallsAtLeast {
            get {
                return ResourceManager.GetString("NoMatchingCallsAtLeast", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Expected invocation on the mock at least once, but was never performed: {1}.
        /// </summary>
        public static string NoMatchingCallsAtLeastOnce {
            get {
                return ResourceManager.GetString("NoMatchingCallsAtLeastOnce", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Expected invocation on the mock at most {3} times, but was {4} times: {1}.
        /// </summary>
        public static string NoMatchingCallsAtMost {
            get {
                return ResourceManager.GetString("NoMatchingCallsAtMost", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Expected invocation on the mock at most once, but was {4} times: {1}.
        /// </summary>
        public static string NoMatchingCallsAtMostOnce {
            get {
                return ResourceManager.GetString("NoMatchingCallsAtMostOnce", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Expected invocation on the mock between {2} and {3} times (Exclusive), but was {4} times: {1}.
        /// </summary>
        public static string NoMatchingCallsBetweenExclusive {
            get {
                return ResourceManager.GetString("NoMatchingCallsBetweenExclusive", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Expected invocation on the mock between {2} and {3} times (Inclusive), but was {4} times: {1}.
        /// </summary>
        public static string NoMatchingCallsBetweenInclusive {
            get {
                return ResourceManager.GetString("NoMatchingCallsBetweenInclusive", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Expected invocation on the mock exactly {2} times, but was {4} times: {1}.
        /// </summary>
        public static string NoMatchingCallsExactly {
            get {
                return ResourceManager.GetString("NoMatchingCallsExactly", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Expected invocation on the mock should never have been performed, but was {4} times: {1}.
        /// </summary>
        public static string NoMatchingCallsNever {
            get {
                return ResourceManager.GetString("NoMatchingCallsNever", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Expected invocation on the mock once, but was {4} times: {1}.
        /// </summary>
        public static string NoMatchingCallsOnce {
            get {
                return ResourceManager.GetString("NoMatchingCallsOnce", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Type {0} does not implement required interface {1}.
        /// </summary>
        public static string TypeNotImplementInterface {
            get {
                return ResourceManager.GetString("TypeNotImplementInterface", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Type {0} does not from required type {1}.
        /// </summary>
        public static string TypeNotInheritFromType {
            get {
                return ResourceManager.GetString("TypeNotInheritFromType", resourceCulture);
            }
        }
    }
}
